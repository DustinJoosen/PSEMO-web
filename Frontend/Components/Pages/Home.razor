@page "/"
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>


<div class="main row">
    <div class="col-4 filter-section">
        Hier komen de filters en zoek-shit
    </div>
    <div class="location-cards-section col-4">
        @foreach (var location in Locations)
        {
            <div class="row location">
                <div class="location-image">
                    <img src="@location.ImagePath" />
                </div>
                <div class="location-info">
                    <div class="location-info-content">
                        <p class="location-info-name">@location.Name</p>
                        <p class="location-info-filter">Filter 1</p>
                        <p class="location-info-filter">Filter 2</p>
                        <p class="location-info-filter">Filter 3</p>
                        <button class="location-info-btn">Zien</button>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="map-section col-3">
        <ViewableMap Coordinates="this.Coordinates"></ViewableMap>
    </div>
</div>



@code {
    [Inject]
    public ApiClient ApiClient { get; set; }

    public List<(double Lat, double Lng, string Title)> Coordinates = [];
    public List<LocationDTO> Locations = [];

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            this.Locations = await this.ApiClient.LocationService.Get() ?? [];
            this.Coordinates = this.Locations.Select(location => (
                Convert.ToDouble(location.Latitude), 
                Convert.ToDouble(location.Longitude), 
                location.Name
            )).ToList();

            StateHasChanged();
        }
     
    }
}


