@page "/"
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>


<div class="main row">
    <div class="col-4 filter-section">
        Hier komen de filters en zoek-shit
    </div>
    <div class="location-cards-section col-4">
        @for (int i = 0; i < 5; i++)
        {
            @foreach (var location in Locations)
            {
                <div class="row location">
                    <div class="location-image">
                        <img src="@location.ImagePath" />
                    </div>
                    <div class="location-info">
                        <div class="location-info-content">
                            <p class="location-info-name">@location.Name</p>
                            <p class="location-info-filter">Filter 1</p>
                            <p class="location-info-filter">Filter 2</p>
                            <p class="location-info-filter">Filter 3</p>
                            <button class="location-info-btn">Zien</button>
                        </div>
                    </div>
                </div>
            }
        }
    </div>

    <div class="map-section col-3">
        <ViewableMap Coordinates="this.Coordinates"></ViewableMap>
    </div>
</div>



@code {
    [Inject]
    public ApiClient ApiClient { get; set; }

    public List<(double Lat, double Lng, string Title)> Coordinates = [];
    public List<LocationDTO> Locations = [];

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        var locations = await this.ApiClient.LocationService.Get();

        if (firstRender && locations != null)
        {
            this.Locations = locations;
            this.Coordinates = locations.Select(location => 
                (location.Latitude, location.Longitude, location.Name)).ToList();

            StateHasChanged();
        }
    }
}


